akka {
  loglevel = INFO
  
  actor {
    provider = "akka.cluster.ClusterActorRefProvider"
  }

  // stupid but working work around
  remote {
    log-remote-lifecycle-events = off
    maximum-payload-bytes = 30000000 bytes
    netty.tcp {
      hostname = "127.0.0.1"
      port = ${application.node.port}
      message-frame-size = 30000000b
      send-buffer-size = 30000000b
      receive-buffer-size = 30000000b
      maximum-frame-size = 30000000b
    }
  }

  cluster {
    name = "newsfeed"
    seed-nodes = [
      "akka.tcp://"${akka.cluster.name}"@127.0.0.1:2551",
      "akka.tcp://"${akka.cluster.name}"@127.0.0.1:2552"]

    auto-down-unreachable-after = 10s

    metrics.enabled = off
  }

  persistence {
    journal {
      plugin = "akka.persistence.journal.leveldb-shared"
      leveldb-shared.store {
        native = on
        dir = "target/shared-journal"
      }
    }
    snapshot-store {
      plugin = "akka.persistence.snapshot-store.local"
      local.dir = "target/snapshots"
    }
    snapshot-store.plugin = "akka.persistence.snapshot-store.local"
    snapshot-store.local.dir = "target/snapshots"
  }
}

application {
  leveldb {
    start-shared-leveldb: false
    shared-name: "leveldb-store"
    ip: "127.0.0.1"
    port: 2551
    actor-path: "akka.tcp://"${akka.cluster.name}"@"${application.leveldb.ip}":"${application.leveldb.port}"/user/"${application.leveldb.shared-name}
  }
  rest {
    port: 8080
  }
  node {
    port: 0
  }
  resource {
    ip: "0.0.0.0"
    port: 8080
  }
}